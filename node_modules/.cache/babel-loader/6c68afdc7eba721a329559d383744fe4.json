{"ast":null,"code":"import axios from \"axios\";\nconst url = \"https://be-slidedeck.herokuapp.com/login\";\n/** Async Axios API calls in one neat callable object.\n *  @example\n *  // Get a list of templates\n *  api.get_template(token, resultHandler);\n *  */\n\nconst api = {\n  put_login: (user, callback) => {\n    const path = `${url}/login`;\n    axios.put(path, {\n      name: user.name,\n      password: user.password\n    }).then(response => {\n      callback(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  post_register: (user, callback) => {\n    const path = `${url}/register`;\n    axios.post(path, {\n      name: user.name,\n      password: user.password,\n      role: user.role\n    }).then(response => {\n      callback(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  post_template_create: (template, callback) => {\n    const path = `${url}/template/create`;\n    axios.post(path, {\n      name: template.name,\n      headers: template.headers,\n      token: template.token\n    }).then(response => {\n      callback(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  get_template: (token, callback) => {\n    const path = `${url}/template/`;\n    axios.get(path, {\n      params: {\n        token: token\n      }\n    }).then(response => {\n      callback(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  get_test: (token, callback) => {\n    const path = `${url}/test/`;\n    axios.get(path, {\n      params: {\n        token: token\n      }\n    }).then(response => {\n      callback(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  post_test_create: (test, callback) => {\n    const path = `${url}/test/create`;\n    axios.post(path, {\n      name: test.name,\n      template: test.template,\n      fields: test.fields,\n      token: test.token\n    }).then(response => {\n      callback(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  post_log_create: (log, callback) => {\n    const path = `${url}/log/create`;\n    axios.post(path, {\n      name: log.name,\n      template: log.template,\n      test: log.test,\n      token: log.token\n    }).then(response => {\n      callback(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  get_log: (token, callback) => {\n    const path = `${url}/log/`;\n    axios.get(path, {\n      params: {\n        token: token\n      }\n    }).then(response => {\n      callback(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  get_log_id: (id, token, callback) => {\n    const path = `${url}/log/${id}/`;\n    axios.get(path, {\n      params: {\n        token: token\n      }\n    }).then(response => {\n      callback(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  } // TODO \n\n};\nexport default api;","map":{"version":3,"sources":["/Users/tom/Documents/F21 COMP 523/repos/slidedeck-fe/src/static/api.js"],"names":["axios","url","api","put_login","user","callback","path","put","name","password","then","response","data","catch","error","console","log","post_register","post","role","post_template_create","template","headers","token","get_template","get","params","get_test","post_test_create","test","fields","post_log_create","get_log","get_log_id","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,0CAAZ;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,GAAG,GAAG;AACRC,EAAAA,SAAS,EAAE,CAACC,IAAD,EAAOC,QAAP,KAAoB;AAC3B,UAAMC,IAAI,GAAI,GAAEL,GAAI,QAApB;AACAD,IAAAA,KAAK,CACAO,GADL,CACSD,IADT,EACe;AACPE,MAAAA,IAAI,EAAEJ,IAAI,CAACI,IADJ;AAEPC,MAAAA,QAAQ,EAAEL,IAAI,CAACK;AAFR,KADf,EAKKC,IALL,CAKWC,QAAD,IAAc;AAChBN,MAAAA,QAAQ,CAACM,QAAQ,CAACC,IAAV,CAAR;AACH,KAPL,EAQKC,KARL,CAQYC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAVL;AAWH,GAdO;AAeRG,EAAAA,aAAa,EAAE,CAACb,IAAD,EAAOC,QAAP,KAAoB;AAC/B,UAAMC,IAAI,GAAI,GAAEL,GAAI,WAApB;AACAD,IAAAA,KAAK,CACAkB,IADL,CACUZ,IADV,EACgB;AACRE,MAAAA,IAAI,EAAEJ,IAAI,CAACI,IADH;AAERC,MAAAA,QAAQ,EAAEL,IAAI,CAACK,QAFP;AAGRU,MAAAA,IAAI,EAAEf,IAAI,CAACe;AAHH,KADhB,EAMKT,IANL,CAMWC,QAAD,IAAc;AAChBN,MAAAA,QAAQ,CAACM,QAAQ,CAACC,IAAV,CAAR;AACH,KARL,EASKC,KATL,CASYC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAXL;AAYH,GA7BO;AA8BRM,EAAAA,oBAAoB,EAAE,CAACC,QAAD,EAAWhB,QAAX,KAAwB;AAC1C,UAAMC,IAAI,GAAI,GAAEL,GAAI,kBAApB;AACAD,IAAAA,KAAK,CACAkB,IADL,CACUZ,IADV,EACgB;AACRE,MAAAA,IAAI,EAAEa,QAAQ,CAACb,IADP;AAERc,MAAAA,OAAO,EAAED,QAAQ,CAACC,OAFV;AAGRC,MAAAA,KAAK,EAAEF,QAAQ,CAACE;AAHR,KADhB,EAMKb,IANL,CAMWC,QAAD,IAAc;AAChBN,MAAAA,QAAQ,CAACM,QAAQ,CAACC,IAAV,CAAR;AACH,KARL,EASKC,KATL,CASYC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAXL;AAYH,GA5CO;AA6CRU,EAAAA,YAAY,EAAE,CAACD,KAAD,EAAQlB,QAAR,KAAqB;AAC/B,UAAMC,IAAI,GAAI,GAAEL,GAAI,YAApB;AACAD,IAAAA,KAAK,CACAyB,GADL,CACSnB,IADT,EACe;AAACoB,MAAAA,MAAM,EAAE;AAChBH,QAAAA,KAAK,EAAEA;AADS;AAAT,KADf,EAIKb,IAJL,CAIWC,QAAD,IAAc;AAChBN,MAAAA,QAAQ,CAACM,QAAQ,CAACC,IAAV,CAAR;AACH,KANL,EAOKC,KAPL,CAOYC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KATL;AAUH,GAzDO;AA0DRa,EAAAA,QAAQ,EAAE,CAACJ,KAAD,EAAQlB,QAAR,KAAqB;AAC3B,UAAMC,IAAI,GAAI,GAAEL,GAAI,QAApB;AACAD,IAAAA,KAAK,CACAyB,GADL,CACSnB,IADT,EACe;AAACoB,MAAAA,MAAM,EAAE;AAChBH,QAAAA,KAAK,EAAEA;AADS;AAAT,KADf,EAIKb,IAJL,CAIWC,QAAD,IAAc;AAChBN,MAAAA,QAAQ,CAACM,QAAQ,CAACC,IAAV,CAAR;AACH,KANL,EAOKC,KAPL,CAOYC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KATL;AAUH,GAtEO;AAuERc,EAAAA,gBAAgB,EAAE,CAACC,IAAD,EAAOxB,QAAP,KAAoB;AAClC,UAAMC,IAAI,GAAI,GAAEL,GAAI,cAApB;AACAD,IAAAA,KAAK,CACAkB,IADL,CACUZ,IADV,EACgB;AACRE,MAAAA,IAAI,EAAEqB,IAAI,CAACrB,IADH;AAERa,MAAAA,QAAQ,EAAEQ,IAAI,CAACR,QAFP;AAGRS,MAAAA,MAAM,EAAED,IAAI,CAACC,MAHL;AAIRP,MAAAA,KAAK,EAAEM,IAAI,CAACN;AAJJ,KADhB,EAOKb,IAPL,CAOWC,QAAD,IAAc;AAChBN,MAAAA,QAAQ,CAACM,QAAQ,CAACC,IAAV,CAAR;AACH,KATL,EAUKC,KAVL,CAUYC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAZL;AAaH,GAtFO;AAuFRiB,EAAAA,eAAe,EAAE,CAACf,GAAD,EAAMX,QAAN,KAAmB;AAChC,UAAMC,IAAI,GAAI,GAAEL,GAAI,aAApB;AACAD,IAAAA,KAAK,CACAkB,IADL,CACUZ,IADV,EACgB;AACRE,MAAAA,IAAI,EAAEQ,GAAG,CAACR,IADF;AAERa,MAAAA,QAAQ,EAAEL,GAAG,CAACK,QAFN;AAGRQ,MAAAA,IAAI,EAAEb,GAAG,CAACa,IAHF;AAIRN,MAAAA,KAAK,EAAEP,GAAG,CAACO;AAJH,KADhB,EAOKb,IAPL,CAOWC,QAAD,IAAc;AAChBN,MAAAA,QAAQ,CAACM,QAAQ,CAACC,IAAV,CAAR;AACH,KATL,EAUKC,KAVL,CAUYC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAZL;AAaH,GAtGO;AAuGRkB,EAAAA,OAAO,EAAE,CAACT,KAAD,EAAQlB,QAAR,KAAqB;AAC1B,UAAMC,IAAI,GAAI,GAAEL,GAAI,OAApB;AACAD,IAAAA,KAAK,CACAyB,GADL,CACSnB,IADT,EACe;AAACoB,MAAAA,MAAM,EAAE;AAChBH,QAAAA,KAAK,EAAEA;AADS;AAAT,KADf,EAIKb,IAJL,CAIWC,QAAD,IAAc;AAChBN,MAAAA,QAAQ,CAACM,QAAQ,CAACC,IAAV,CAAR;AACH,KANL,EAOKC,KAPL,CAOYC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KATL;AAUH,GAnHO;AAoHRmB,EAAAA,UAAU,EAAE,CAACC,EAAD,EAAKX,KAAL,EAAYlB,QAAZ,KAAyB;AACjC,UAAMC,IAAI,GAAI,GAAEL,GAAI,QAAOiC,EAAG,GAA9B;AACAlC,IAAAA,KAAK,CACAyB,GADL,CACSnB,IADT,EACe;AAACoB,MAAAA,MAAM,EAAE;AAChBH,QAAAA,KAAK,EAAEA;AADS;AAAT,KADf,EAIKb,IAJL,CAIWC,QAAD,IAAc;AAChBN,MAAAA,QAAQ,CAACM,QAAQ,CAACC,IAAV,CAAR;AACH,KANL,EAOKC,KAPL,CAOYC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KATL;AAUH,GAhIO,CAkIR;;AAlIQ,CAAZ;AAsIA,eAAeZ,GAAf","sourcesContent":["import axios from \"axios\";\n\nconst url = \"https://be-slidedeck.herokuapp.com/login\";\n\n/** Async Axios API calls in one neat callable object.\n *  @example\n *  // Get a list of templates\n *  api.get_template(token, resultHandler);\n *  */ \nconst api = {\n    put_login: (user, callback) => {\n        const path = `${url}/login`;\n        axios\n            .put(path, {\n                name: user.name,\n                password: user.password\n            })\n            .then((response) => {\n                callback(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    },\n    post_register: (user, callback) => {\n        const path = `${url}/register`;\n        axios\n            .post(path, {\n                name: user.name,\n                password: user.password,\n                role: user.role\n            })\n            .then((response) => {\n                callback(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    },\n    post_template_create: (template, callback) => {\n        const path = `${url}/template/create`;\n        axios\n            .post(path, {\n                name: template.name,\n                headers: template.headers,\n                token: template.token\n            })\n            .then((response) => {\n                callback(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    },\n    get_template: (token, callback) => {\n        const path = `${url}/template/`;\n        axios\n            .get(path, {params: {\n                token: token\n            }})\n            .then((response) => {\n                callback(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    },\n    get_test: (token, callback) => {\n        const path = `${url}/test/`;\n        axios\n            .get(path, {params: {\n                token: token\n            }})\n            .then((response) => {\n                callback(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    },\n    post_test_create: (test, callback) => {\n        const path = `${url}/test/create`;\n        axios\n            .post(path, {\n                name: test.name,\n                template: test.template,\n                fields: test.fields,\n                token: test.token\n            })\n            .then((response) => {\n                callback(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    },\n    post_log_create: (log, callback) => {\n        const path = `${url}/log/create`;\n        axios\n            .post(path, {\n                name: log.name,\n                template: log.template,\n                test: log.test,\n                token: log.token\n            })\n            .then((response) => {\n                callback(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    },\n    get_log: (token, callback) => {\n        const path = `${url}/log/`;\n        axios\n            .get(path, {params: {\n                token: token\n            }})\n            .then((response) => {\n                callback(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    },\n    get_log_id: (id, token, callback) => {\n        const path = `${url}/log/${id}/`;\n        axios\n            .get(path, {params: {\n                token: token\n            }})\n            .then((response) => {\n                callback(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    },\n\n    // TODO \n\n}\n\nexport default api;"]},"metadata":{},"sourceType":"module"}