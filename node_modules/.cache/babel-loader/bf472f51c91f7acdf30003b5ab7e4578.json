{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/F21 COMP 523/repos/slidedeck-fe/src/components/SidebarItems.js\";\n// Import CSS\nimport './css/SidebarItem.css'; // Import major dependencies\n\nimport React, { useContext, useRef, useState } from 'react';\nimport { useHistory } from \"react-router-dom\"; // Import components\n\nimport Dashboard from \"../views/Dashboard\";\nimport FX from './FX'; // Import icons\n\nimport { AiTwotoneFolderOpen } from \"react-icons/ai\"; // Import API and static content\n\nconst SidebarItem = props => {\n  const DashboardContext = useContext(Dashboard.Context); // For Ripple FX\n\n  const [ripple, setRipple] = useState(FX.Ripple.util.defaultState());\n  const buttonRef = useRef();\n\n  const onMouseDown = e => {\n    setRipple(FX.Ripple.util.startState(e, buttonRef));\n  };\n\n  const onMouseUp = e => {\n    setRipple(FX.Ripple.util.stopState(e, buttonRef));\n  }; // End Ripple FX\n\n\n  const history = useHistory();\n\n  const changeDashboardPage = () => {\n    // DashboardContext.setState((state) => {\n    //     const newState = { ...state };\n    //     newState.path = \"/dashboard\" + props.path;\n    //     newState.active.i = props.index;\n    //     newState.active.title = props.title;\n    //     return newState;\n    // })\n    history.push(\"/dashboard\" + props.path);\n  }; // const foo = props.icon ? props.icon : AiTwotoneFolderOpen;\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar-item-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, props.title)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"sidebar-item\" + (props.active ? \" active\" : \"\"),\n    onClick: changeDashboardPage,\n    title: props.title,\n    onMouseDown: onMouseDown,\n    onMouseUp: onMouseUp,\n    onMouseLeave: onMouseUp,\n    ref: buttonRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FX.Ripple.Component, {\n    state: ripple,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar-item-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, props.icon ? /*#__PURE__*/React.createElement(props.icon, {\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(AiTwotoneFolderOpen, {\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"whitespace-nowrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, props.title)));\n};\n\nexport default SidebarItem;","map":{"version":3,"sources":["/Users/tom/Documents/F21 COMP 523/repos/slidedeck-fe/src/components/SidebarItems.js"],"names":["React","useContext","useRef","useState","useHistory","Dashboard","FX","AiTwotoneFolderOpen","SidebarItem","props","DashboardContext","Context","ripple","setRipple","Ripple","util","defaultState","buttonRef","onMouseDown","e","startState","onMouseUp","stopState","history","changeDashboardPage","push","path","title","active","icon"],"mappings":";AAAA;AACA,OAAO,uBAAP,C,CACA;;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,EAAP,MAAe,MAAf,C,CACA;;AACA,SAASC,mBAAT,QAAoC,gBAApC,C,CACA;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE3B,QAAMC,gBAAgB,GAAGT,UAAU,CAACI,SAAS,CAACM,OAAX,CAAnC,CAF2B,CAG3B;;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAACG,EAAE,CAACQ,MAAH,CAAUC,IAAV,CAAeC,YAAf,EAAD,CAApC;AACA,QAAMC,SAAS,GAAGf,MAAM,EAAxB;;AACA,QAAMgB,WAAW,GAAIC,CAAD,IAAO;AACvBN,IAAAA,SAAS,CAACP,EAAE,CAACQ,MAAH,CAAUC,IAAV,CAAeK,UAAf,CAA0BD,CAA1B,EAA6BF,SAA7B,CAAD,CAAT;AACH,GAFD;;AAGA,QAAMI,SAAS,GAAIF,CAAD,IAAO;AACrBN,IAAAA,SAAS,CAACP,EAAE,CAACQ,MAAH,CAAUC,IAAV,CAAeO,SAAf,CAAyBH,CAAzB,EAA4BF,SAA5B,CAAD,CAAT;AACH,GAFD,CAT2B,CAY3B;;;AACA,QAAMM,OAAO,GAAGnB,UAAU,EAA1B;;AACA,QAAMoB,mBAAmB,GAAG,MAAM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAa,eAAehB,KAAK,CAACiB,IAAlC;AACH,GATD,CAd2B,CAyB3B;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIjB,KAAK,CAACkB,KAAV,CADJ,CADJ,eAII;AACI,IAAA,SAAS,EAAE,kBAAkBlB,KAAK,CAACmB,MAAN,GAAe,SAAf,GAA2B,EAA7C,CADf;AAEI,IAAA,OAAO,EAAEJ,mBAFb;AAGI,IAAA,KAAK,EAAEf,KAAK,CAACkB,KAHjB;AAII,IAAA,WAAW,EAAET,WAJjB;AAKI,IAAA,SAAS,EAAEG,SALf;AAMI,IAAA,YAAY,EAAEA,SANlB;AAOI,IAAA,GAAG,EAAEJ,SAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASI,oBAAC,EAAD,CAAI,MAAJ,CAAW,SAAX;AAAqB,IAAA,KAAK,EAAEL,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAUI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACoB,IAAN,gBACG,oBAAC,KAAD,CAAO,IAAP;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,gBAGG,oBAAC,mBAAD;AAAqB,IAAA,SAAS,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CAVJ,eAiBI;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKpB,KAAK,CAACkB,KADX,CAjBJ,CAJJ,CADJ;AA6BH,CAxDD;;AA0DA,eAAenB,WAAf","sourcesContent":["// Import CSS\nimport './css/SidebarItem.css';\n// Import major dependencies\nimport React, { useContext, useRef, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\n// Import components\nimport Dashboard from \"../views/Dashboard\";\nimport FX from './FX';\n// Import icons\nimport { AiTwotoneFolderOpen } from \"react-icons/ai\";\n// Import API and static content\n\nconst SidebarItem = (props) => {\n\n    const DashboardContext = useContext(Dashboard.Context);\n    // For Ripple FX\n    const [ripple, setRipple] = useState(FX.Ripple.util.defaultState());\n    const buttonRef = useRef();\n    const onMouseDown = (e) => {\n        setRipple(FX.Ripple.util.startState(e, buttonRef));\n    }\n    const onMouseUp = (e) => {\n        setRipple(FX.Ripple.util.stopState(e, buttonRef));\n    }\n    // End Ripple FX\n    const history = useHistory();\n    const changeDashboardPage = () => {\n        // DashboardContext.setState((state) => {\n        //     const newState = { ...state };\n        //     newState.path = \"/dashboard\" + props.path;\n        //     newState.active.i = props.index;\n        //     newState.active.title = props.title;\n        //     return newState;\n        // })\n        history.push(\"/dashboard\" + props.path);\n    }\n\n    // const foo = props.icon ? props.icon : AiTwotoneFolderOpen;\n\n    return (\n        <div className=\"sidebar-item-wrapper\">  \n            <div className=\"sidebar-tooltip\">\n                <p>{props.title}</p>\n            </div>\n            <button \n                className={\"sidebar-item\" + (props.active ? \" active\" : \"\")} \n                onClick={changeDashboardPage}\n                title={props.title}\n                onMouseDown={onMouseDown}\n                onMouseUp={onMouseUp}\n                onMouseLeave={onMouseUp}\n                ref={buttonRef}\n            >\n                <FX.Ripple.Component state={ripple}/>\n                <div className=\"sidebar-item-icon\">\n                    {props.icon ? \n                        <props.icon className=\"icon\"/>\n                        :\n                        <AiTwotoneFolderOpen className=\"icon\"/>\n                    }\n                </div>\n                <p className=\"whitespace-nowrap\">\n                    {props.title}\n                </p>\n            </button>\n        </div>\n    )\n\n}\n\nexport default SidebarItem;"]},"metadata":{},"sourceType":"module"}