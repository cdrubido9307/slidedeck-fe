{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/F21 COMP 523/repos/slidedeck-fe/src/components/FX.js\";\n// Import CSS\nimport \"./css/FX.css\"; // Import major dependencies\n\nimport React, { useEffect, useState } from \"react\"; // Import components\n// Import icons\n// Import API and static content\n// Ripple FX\n\n/**\n *  Ripple FX component for button clicks.\n *  @param props React properties\n *  @example \n *  // React component\n *  <FX.Ripple.Component state={state}/>\n *  // Helper methods\n *  FX.Ripple.util.getDefaultState()\n *  FX.Ripple.util.getStartState()\n *  FX.Ripple.util.getStopState()\n */\n\nconst Ripple = props => {\n  const rippleState = props.state;\n  const [showing, setShowing] = useState(false);\n  const timeout = {\n    id: undefined\n  };\n  const css = {\n    wrapper: {\n      height: rippleState.height.toString() + \"px\",\n      width: rippleState.width.toString() + \"px\"\n    },\n    rippler: {\n      marginLeft: rippleState.x - 8 + \"px\",\n      marginTop: rippleState.y - 8 + \"px\"\n    }\n  };\n  useEffect(() => {\n    if (rippleState.show) {\n      if (showing) {\n        clearTimeout(timeout.id);\n        setShowing(false);\n        timeout.id = setTimeout(() => {\n          setShowing(true);\n        }, 16);\n      } else {\n        setShowing(true);\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [rippleState.show]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ripple-wrapper\",\n    style: css.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: showing ? \"rippler\" : \"\",\n    style: css.rippler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }));\n};\n/**\n *  Returns the default state object for the Ripple FX.\n *  Helpful for initializing state in parent component.\n *  @param none\n *  @returns {object} Default Ripple state object\n *  @example\n *  // Default state object\n *  {\n *      show: false, \n *      x: 0, \n *      y: 0, \n *      height: 0, \n *      width: 0\n *  }\n */\n\n\nconst rippleGetDefaultState = () => {\n  const defaultState = {\n    show: false,\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0\n  };\n  return { ...defaultState\n  };\n};\n/**\n *  Returns the appropriate start state object for the Ripple FX.\n *  Intended for use with onMouseDown event.\n *  @param e Event object\n *  @param ref React ref to button\n *  @returns {object} Start Ripple state object\n *  @example\n *  // Start state object\n *  {\n *      show: true, \n *      x: 32,      // ripple center x (px)\n *      y: 32,      // ripple center y (px)\n *      height: 32, // ripple area height (px)\n *      width: 32   // ripple area width (px)\n *  }\n */\n\n\nconst rippleGetStartState = (e, ref) => {\n  const refRect = ref.current.getBoundingClientRect();\n  const startState = {\n    show: true,\n    height: refRect.height,\n    width: refRect.width,\n    x: e.clientX - refRect.x,\n    y: e.clientY - refRect.y\n  };\n  return { ...startState\n  };\n};\n/**\n *  Returns the appropriate stop state object for the Ripple FX.\n *  Intended for use with onMouseUp event.\n *  @param e Event object\n *  @param ref React ref to button\n *  @returns {object} Stop Ripple state object\n *  @example\n *  // Start state object\n *  {\n *      show: false, \n *      x: 32,      // ripple center x (px)\n *      y: 32,      // ripple center y (px)\n *      height: 32, // ripple area height (px)\n *      width: 32   // ripple area width (px)\n *  }\n */\n\n\nconst rippleGetStopState = (e, ref) => {\n  const stopState = rippleGetDefaultState();\n  const refRect = ref.current.getBoundingClientRect();\n  stopState.show = false;\n  stopState.height = refRect.height;\n  stopState.width = refRect.width;\n  stopState.x = e.clientX - refRect.x;\n  stopState.y = e.clientY - refRect.y;\n  return { ...stopState\n  };\n}; // FX export object\n\n\nconst FX = {\n  Ripple: {\n    Component: Ripple,\n    util: {\n      defaultState: rippleGetDefaultState,\n      startState: rippleGetStartState,\n      stopState: rippleGetStopState\n    }\n  }\n};\nexport default FX;","map":{"version":3,"sources":["/Users/tom/Documents/F21 COMP 523/repos/slidedeck-fe/src/components/FX.js"],"names":["React","useEffect","useState","Ripple","props","rippleState","state","showing","setShowing","timeout","id","undefined","css","wrapper","height","toString","width","rippler","marginLeft","x","marginTop","y","show","clearTimeout","setTimeout","rippleGetDefaultState","defaultState","rippleGetStartState","e","ref","refRect","current","getBoundingClientRect","startState","clientX","clientY","rippleGetStopState","stopState","FX","Component","util"],"mappings":"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","sourcesContent":["// Import CSS\nimport \"./css/FX.css\"\n// Import major dependencies\nimport React, { useEffect, useState } from \"react\"\n// Import components\n// Import icons\n// Import API and static content\n\n// Ripple FX\n/**\n *  Ripple FX component for button clicks.\n *  @param props React properties\n *  @example \n *  // React component\n *  <FX.Ripple.Component state={state}/>\n *  // Helper methods\n *  FX.Ripple.util.getDefaultState()\n *  FX.Ripple.util.getStartState()\n *  FX.Ripple.util.getStopState()\n */\nconst Ripple = (props) => {\n\n    const rippleState = props.state\n    const [showing, setShowing] = useState(false);\n    const timeout = {id: undefined};\n\n    const css = {\n        wrapper: {\n            height: rippleState.height.toString() + \"px\",\n            width: rippleState.width.toString() + \"px\"\n        },\n        rippler: {\n            marginLeft: (rippleState.x - 8) + \"px\",\n            marginTop: (rippleState.y - 8) + \"px\"\n        }\n    }\n\n    useEffect(() => {\n        if(rippleState.show) {\n            if(showing) {\n                clearTimeout(timeout.id);\n                setShowing(false);\n                timeout.id = setTimeout(() => {\n                    setShowing(true);\n                }, 16);\n            } else {\n                setShowing(true);\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [rippleState.show])\n\n    return(\n        <div className=\"ripple-wrapper\" \n            style={css.wrapper}\n        >\n            <div \n                className={showing ? \"rippler\" : \"\"}\n                style={css.rippler}\n            />\n        </div>\n    )\n\n}\n/**\n *  Returns the default state object for the Ripple FX.\n *  Helpful for initializing state in parent component.\n *  @param none\n *  @returns {object} Default Ripple state object\n *  @example\n *  // Default state object\n *  {\n *      show: false, \n *      x: 0, \n *      y: 0, \n *      height: 0, \n *      width: 0\n *  }\n */\nconst rippleGetDefaultState = () => {\n    const defaultState = {\n        show: false, \n        x: 0, \n        y: 0, \n        height: 0, \n        width: 0\n    }\n    return {...defaultState};\n}\n/**\n *  Returns the appropriate start state object for the Ripple FX.\n *  Intended for use with onMouseDown event.\n *  @param e Event object\n *  @param ref React ref to button\n *  @returns {object} Start Ripple state object\n *  @example\n *  // Start state object\n *  {\n *      show: true, \n *      x: 32,      // ripple center x (px)\n *      y: 32,      // ripple center y (px)\n *      height: 32, // ripple area height (px)\n *      width: 32   // ripple area width (px)\n *  }\n */\nconst rippleGetStartState = (e, ref) => {\n    const refRect = ref.current.getBoundingClientRect();\n    const startState = {\n        show: true,\n        height: refRect.height,\n        width: refRect.width,\n        x: e.clientX - refRect.x,\n        y: e.clientY - refRect.y\n    }\n    return {...startState};\n}\n/**\n *  Returns the appropriate stop state object for the Ripple FX.\n *  Intended for use with onMouseUp event.\n *  @param e Event object\n *  @param ref React ref to button\n *  @returns {object} Stop Ripple state object\n *  @example\n *  // Start state object\n *  {\n *      show: false, \n *      x: 32,      // ripple center x (px)\n *      y: 32,      // ripple center y (px)\n *      height: 32, // ripple area height (px)\n *      width: 32   // ripple area width (px)\n *  }\n */\nconst rippleGetStopState = (e, ref) => {\n    const stopState = rippleGetDefaultState();\n    const refRect = ref.current.getBoundingClientRect();\n    stopState.show = false;\n    stopState.height = refRect.height;\n    stopState.width = refRect.width;\n    stopState.x = e.clientX - refRect.x;\n    stopState.y = e.clientY - refRect.y;\n    return {...stopState};\n}\n\n// FX export object\nconst FX = {\n    Ripple: {\n        Component: Ripple,\n        util: {\n            defaultState: rippleGetDefaultState,\n            startState: rippleGetStartState,\n            stopState: rippleGetStopState\n        }\n    }\n}\n\nexport default FX;"]},"metadata":{},"sourceType":"module"}