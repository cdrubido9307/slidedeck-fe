{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/F21 COMP 523/repos/slidedeck-fe/src/views/Dashboard.js\";\n// Import CSS\nimport \"./css/Dashboard.css\"; // Import major dependencies\n\nimport React, { createContext, useContext, useEffect, useState } from \"react\"; // import { Helmet } from \"react-helmet\";\n\nimport { Helmet } from 'react-helmet-async';\nimport Card from \"../components/Card\"; // Import components\n\nimport Header from \"../components/Header\";\nimport Sidebar from \"../components/Sidebar\";\nimport SidebarItem from \"../components/SidebarItems\";\nimport HomeCards from \"./dashboard-pages/HomeCards\";\nimport DeveloperCards from \"./dashboard-pages/DeveloperCards\";\nimport Auth from \"../components/Auth\"; // Import icons\n// Import API and static content\n\nimport dashboardItems from \"../static/dashboardItems\";\nimport storage from \"../static/storage\";\nimport ManageLogs from \"./dashboard-pages/ManageLogs\"; // import storage from \"../static/storage\";\n\nconst DashboardContext = createContext();\n\nconst DashboardPage = props => {\n  const AuthContext = useContext(Auth.Context);\n  const defaultState = {\n    active: {\n      i: 0,\n      title: dashboardItems[0].title\n    },\n    sidebarShow: true\n  };\n  const [dashboardState, setDashboardState] = useState(storage.get(\"dashboard\") === undefined ? defaultState : storage.get(\"dashboard\"));\n  const [dashboardContent, setDashboardContent] = useState( /*#__PURE__*/React.createElement(React.Fragment, null));\n  const [headerContent, setHeaderContent] = useState( /*#__PURE__*/React.createElement(React.Fragment, null)); // Update dashboard content based on unique title\n\n  const updateDashboard = state => {\n    switch (state.active.title) {\n      case \"Home\":\n        setDashboardContent( /*#__PURE__*/React.createElement(HomeCards, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 37\n          }\n        }));\n        break;\n\n      case \"Developer Area\":\n        setDashboardContent( /*#__PURE__*/React.createElement(DeveloperCards, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 37\n          }\n        }));\n        break;\n\n      case \"Manage Logs\":\n        setDashboardContent( /*#__PURE__*/React.createElement(ManageLogs, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 37\n          }\n        }));\n        break;\n\n      default:\n        setDashboardContent( /*#__PURE__*/React.createElement(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 37\n          }\n        }, state.active.title));\n        break;\n    } // if (state.headerContent) {\n    //     setHeaderContent(state.headerContent);\n    // } else {\n    //     setHeaderContent(<></>);\n    // }\n\n  }; // Call appropriate update functions when main state changes\n\n\n  useEffect(() => {\n    // console.log(AuthContext.user);\n    updateDashboard(dashboardState);\n    storage.set(\"dashboard\", dashboardState); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dashboardState]);\n  return /*#__PURE__*/React.createElement(DashboardContext.Provider, {\n    value: {\n      state: dashboardState,\n      setState: setDashboardState\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, dashboardState.active.title)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard\" + (dashboardState.sidebarShow ? \" show-sidebar\" : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    show: dashboardState.sidebarShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"space-y-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, dashboardItems.map((item, i) => {\n    return /*#__PURE__*/React.createElement(SidebarItem, {\n      active: i === dashboardState.active.i,\n      setDashboardState: setDashboardState,\n      key: i,\n      index: i,\n      title: item.title,\n      icon: item.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-grow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-flex-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, dashboardContent))));\n};\n\nconst Dashboard = {\n  Page: DashboardPage,\n  Context: DashboardContext\n};\nexport default Dashboard;","map":{"version":3,"sources":["/Users/tom/Documents/F21 COMP 523/repos/slidedeck-fe/src/views/Dashboard.js"],"names":["React","createContext","useContext","useEffect","useState","Helmet","Card","Header","Sidebar","SidebarItem","HomeCards","DeveloperCards","Auth","dashboardItems","storage","ManageLogs","DashboardContext","DashboardPage","props","AuthContext","Context","defaultState","active","i","title","sidebarShow","dashboardState","setDashboardState","get","undefined","dashboardContent","setDashboardContent","headerContent","setHeaderContent","updateDashboard","state","set","setState","map","item","icon","Dashboard","Page"],"mappings":"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","sourcesContent":["// Import CSS\nimport \"./css/Dashboard.css\";\n// Import major dependencies\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\n// import { Helmet } from \"react-helmet\";\nimport { Helmet } from 'react-helmet-async';\nimport Card from \"../components/Card\";\n// Import components\nimport Header from \"../components/Header\";\nimport Sidebar from \"../components/Sidebar\";\nimport SidebarItem from \"../components/SidebarItems\";\nimport HomeCards from \"./dashboard-pages/HomeCards\";\nimport DeveloperCards from \"./dashboard-pages/DeveloperCards\";\nimport Auth from \"../components/Auth\";\n// Import icons\n// Import API and static content\nimport dashboardItems from \"../static/dashboardItems\";\nimport storage from \"../static/storage\";\nimport ManageLogs from \"./dashboard-pages/ManageLogs\";\n// import storage from \"../static/storage\";\n\nconst DashboardContext = createContext();\n\nconst DashboardPage = (props) => {\n    \n    const AuthContext = useContext(Auth.Context);\n    const defaultState = {\n        active: {\n            i: 0,\n            title: dashboardItems[0].title\n        },\n        sidebarShow: true\n    }\n    const [dashboardState, setDashboardState] = useState(storage.get(\"dashboard\") === undefined ? defaultState : storage.get(\"dashboard\"));\n    const [dashboardContent, setDashboardContent] = useState(<></>);\n    const [headerContent, setHeaderContent] = useState(<></>)\n    // Update dashboard content based on unique title\n    const updateDashboard = (state) => {\n        switch (state.active.title) {\n            case \"Home\":\n                setDashboardContent(<HomeCards/>);\n                break;\n            case \"Developer Area\":\n                setDashboardContent(<DeveloperCards/>);\n                break;\n            case \"Manage Logs\":\n                setDashboardContent(<ManageLogs/>);\n                break;\n            default:\n                setDashboardContent(<Card>{state.active.title}</Card>);\n                break;\n        }\n        // if (state.headerContent) {\n        //     setHeaderContent(state.headerContent);\n        // } else {\n        //     setHeaderContent(<></>);\n        // }\n    }\n    // Call appropriate update functions when main state changes\n    useEffect(() => {\n        // console.log(AuthContext.user);\n        updateDashboard(dashboardState);\n        storage.set(\"dashboard\", dashboardState);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dashboardState])\n\n    return (\n        <DashboardContext.Provider value={{\n            state: dashboardState,\n            setState: setDashboardState\n        }}>\n            <Helmet>\n                <title>\n                    {dashboardState.active.title}\n                </title>\n            </Helmet>\n            <div className={\"dashboard\" + (dashboardState.sidebarShow ? \" show-sidebar\" : \"\")}>\n                {/* Sidebar */}\n                <Sidebar show={dashboardState.sidebarShow}>\n                    <div className=\"space-y-4\">\n                        {dashboardItems.map((item, i) => {return(\n                            <SidebarItem \n                                active={i === dashboardState.active.i}\n                                setDashboardState={setDashboardState}\n                                key={i}\n                                index={i}\n                                title={item.title}\n                                icon={item.icon}\n                            ></SidebarItem>\n                        )})}\n                    </div>\n                </Sidebar>\n                {/* End sidebar */}\n                {/* Main content */}\n                <div className=\"flex-grow\">\n                    <Header>\n                        {/* {headerContent} */}\n                    </Header>\n                    <div className=\"dashboard-flex-content\">\n                        {dashboardContent}\n                    </div>\n                </div>\n                {/* End main content */}\n            </div>\n        </DashboardContext.Provider>\n            \n    )\n}\n\nconst Dashboard = {\n    Page: DashboardPage,\n    Context: DashboardContext\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}